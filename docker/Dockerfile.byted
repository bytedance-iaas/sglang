ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG sglang_version=
ARG sgl_kernel_version=
ARG sglang_router_version=
ARG gdkv_sdk_version=
ARG pris_sdk_version=
ARG eic_sdk_version=
ARG absl_version=2.3.0
ARG branch=

# 编译之前，将源统一设置成内网的
RUN pip config set global.index-url https://bytedpypi.byted.org/simple
RUN sed -i 's/archive.ubuntu.com/mirrors.byted.org/g' /etc/apt/sources.list && \
    sed -i 's/security.ubuntu.com/mirrors.byted.org/g' /etc/apt/sources.list && \
    sed -i 's/ivolces.com/byted.org/g' /etc/apt/sources.list.d/* && \
    sed -i 's/ivolces.com/byted.org/g' /etc/apt/sources.list

# ep statistics
WORKDIR /sgl-workspace
RUN wget -O DeepSeek-R1_prefill_ep16_3500_1500.json https://github.com/user-attachments/files/20903459/DeepSeek-R1_prefill_ep16_3500_1500.json
RUN wget -O DeepSeek-R1_decode_ep32_3500_1500.json https://github.com/user-attachments/files/20903460/DeepSeek-R1_decode_ep32_3500_1500.json

# flash MLA
WORKDIR /sgl-workspace
RUN git clone --branch support_fp8  https://github.com/bytedance-iaas/FlashMLA.git
WORKDIR /sgl-workspace/FlashMLA
RUN pip install . --break-system-packages

# sglang 安装
RUN http_proxy='' pip install "sglang[all]==${sglang_version}" --extra-index-url https://scqq9isgq31i0fb8nt4eg.apigateway-cn-beijing.volceapi.com/simple/ --extra-index-url https://bytedpypi.byted.org/simple --no-build-isolation

# sgl-kernel安装
RUN http_proxy='' pip install sgl_kernel==${sgl_kernel_version} --extra-index-url https://scqq9isgq31i0fb8nt4eg.apigateway-cn-beijing.volceapi.com/simple/ --extra-index-url https://bytedpypi.byted.org/simple

# sglang-router安装
RUN http_proxy='' pip install sglang_router --extra-index-url https://scqq9isgq31i0fb8nt4eg.apigateway-cn-beijing.volceapi.com/simple/ --extra-index-url https://bytedpypi.byted.org/simple

# gdkv sdk安装
RUN http_proxy='' pip install hpkv==${gdkv_sdk_version} --extra-index-url https://scqq9isgq31i0fb8nt4eg.apigateway-cn-beijing.volceapi.com/simple/ --extra-index-url https://bytedpypi.byted.org/simple

# pris sdk安装
RUN http_proxy='' pip install pris==${pris_sdk_version} --extra-index-url https://scqq9isgq31i0fb8nt4eg.apigateway-cn-beijing.volceapi.com/simple/ --extra-index-url https://bytedpypi.byted.org/simple

# eic sdk安装
RUN http_proxy='' pip install eic==${eic_sdk_version} --extra-index-url https://scqq9isgq31i0fb8nt4eg.apigateway-cn-beijing.volceapi.com/simple/ --extra-index-url https://bytedpypi.byted.org/simple

# group_gemm依赖安装
RUN http_proxy='' pip install absl-py==${absl_version} --extra-index-url https://bytedpypi.byted.org/simple

# group_gemm 安装
RUN pip install --verbose git+https://github.com/bytedance-iaas/grouped_gemm@dev

# examples 覆盖
RUN cd /tmp && git clone https://github.com/bytedance-iaas/sglang.git -b ${branch} && \
    rm -rf /sgl-workspace/sglang/examples && \
    mkdir -p /sgl-workspace/sglang && \
    cp -r /tmp/sglang/examples /sgl-workspace/sglang/examples && \
    rm -rf /tmp/sglang

# Triton-Distributed安装

WORKDIR /sgl-workspace
RUN git clone https://github.com/ByteDance-Seed/Triton-distributed.git
WORKDIR /sgl-workspace/Triton-distributed
RUN git submodule deinit --all -f
RUN rm -rf 3rdparty/triton
RUN git submodule update --init --recursive
RUN pip3 install -v cuda-python ninja cmake wheel pybind11 numpy chardet pytest nvidia-ml-py>=12
RUN pip3 install -v 'nvidia-nvshmem-cu12' 'cuda.core==0.2.0' "Cython>=0.29.24"
RUN CPPFLAGS="-I/usr/local/cuda/include" pip3 install https://developer.download.nvidia.com/compute/nvshmem/redist/nvshmem_python/source/nvshmem_python-source-0.1.0.36132199_cuda12-archive.tar.xz -v

RUN pip3 install black "clang-format==19.1.2" pre-commit ruff yapf==0.43
RUN apt update 
RUN apt install -y wget
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | gpg -o /etc/apt/keyrings/llvm-snapshot.gpg --dearmor
RUN echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://mirrors.tuna.tsinghua.edu.cn/llvm-apt/jammy/ llvm-toolchain-jammy-19 main" >> /etc/apt/sources.list.d/llvm-apt.list
RUN apt update && apt install -y clang-19 llvm-19 libclang-19-dev
RUN pip uninstall triton -y && pip uninstall triton_dist -y
RUN USE_TRITON_DISTRIBUTED_AOT=0 pip3 install -e python --verbose --no-build-isolation --use-pep517

# onion 安装
RUN curl -fsSL https://mirrors.byted.org/extra-tools/ubuntu/GPG-KEY-system | gpg --dearmor -o /etc/apt/trusted.gpg.d/volc-extra-tools.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/trusted.gpg.d/volc-extra-tools.gpg] http://mirrors.byted.org/extra-tools/ubuntu jammy main" > /etc/apt/sources.list.d/volctools.list && \ 
    apt update && apt install -y onion-ai-data

# entrypoint
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT [ "/entrypoint.sh" ]

# Set workspace directory
WORKDIR /sgl-workspace/sglang

# 将源统一还原成火山的源
RUN pip config set global.index-url https://mirrors.ivolces.com/pypi/simple/
RUN rm -rf /var/lib/apt/lists/* && \
    sed -i 's/byted.org/ivolces.com/g' /etc/apt/sources.list.d/* && \
    sed -i 's/byted.org/ivolces.com/g' /etc/apt/sources.list
